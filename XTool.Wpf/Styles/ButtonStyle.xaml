<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Core="clr-namespace:FantaziaDesign.Wpf.Core">

	<Style x:Key="DStyles.Button.Base" TargetType="{x:Type ButtonBase}">
		<Setter Property="Background" Value="{DynamicResource DBrush.Container.Fill.Neutral.Primary.Normal}" />
		<Setter Property="BorderBrush" Value="{DynamicResource DBrush.Container.Stroke.Neutral.Primary.Normal}" />
		<Setter Property="Foreground" Value="{DynamicResource DBrush.Content.Fill.Neutral.Primary.Normal}" />
		<Setter Property="TextElement.Foreground" Value="{DynamicResource DBrush.Content.Fill.Neutral.Primary.Normal}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="10,5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
					<Border
						x:Name="border"
						Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{Binding Path=(Core:Attachable.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
						RenderTransformOrigin="0.5,0.5"
						SnapsToDevicePixels="true">
						<ContentPresenter
							x:Name="contentPresenter"
							Margin="0"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Focusable="False"
							RecognizesAccessKey="True"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource DBrush.Container.Fill.Neutral.Primary.Hover}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource DBrush.Container.Fill.Neutral.Primary.Actived}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource DBrush.Content.Fill.Disabled}" />
							<!--<Setter Property="Foreground" Value="{DynamicResource  DBrush.Content.Fill.Disabled}" />-->
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DStyles.Button.ThemeColor" TargetType="{x:Type ButtonBase}">
		<Setter Property="Background" Value="{DynamicResource DBrush.Container.Fill.Accent.Primary.Normal}" />
		<Setter Property="BorderBrush" Value="{DynamicResource DBrush.Container.Stroke.Accent.Primary.Normal}" />
		<Setter Property="Foreground" Value="{DynamicResource DBrush.Content.Fill.Accent.Primary.Normal}" />
		<Setter Property="TextElement.Foreground" Value="{DynamicResource DBrush.Content.Fill.Accent.Primary.Normal}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="HorizontalContentAlignment" Value="Center" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Padding" Value="10,5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ButtonBase}">
					<Border
						x:Name="border"
						Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{Binding Path=(Core:Attachable.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
						RenderTransformOrigin="0.5,0.5"
						SnapsToDevicePixels="true">
						<ContentPresenter
							x:Name="contentPresenter"
							Margin="0"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							Focusable="False"
							RecognizesAccessKey="True"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsMouseOver" Value="true">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource DBrush.Container.Fill.Accent.Primary.Hover}" />
						</Trigger>
						<Trigger Property="IsPressed" Value="true">
							<Setter TargetName="border" Property="Background" Value="{DynamicResource DBrush.Container.Fill.Accent.Primary.Actived}" />
						</Trigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="contentPresenter" Property="TextElement.Foreground" Value="{DynamicResource DBrush.Content.Fill.Disabled}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style
		x:Key="DStyles.Button.Icon"
		BasedOn="{StaticResource DStyles.Button.Base}"
		TargetType="{x:Type ButtonBase}">
		<Setter Property="Padding" Value="5" />
	</Style>

</ResourceDictionary>