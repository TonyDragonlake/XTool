<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Core="clr-namespace:FantaziaDesign.Wpf.Core"
	xmlns:DControls="clr-namespace:FantaziaDesign.Wpf.Controls"
	xmlns:DMedia="clr-namespace:FantaziaDesign.Wpf.Media">
	<PathGeometry x:Key="Geo.ExpanderArrow.Collapsed" Figures="M16 12 L10 18 10 6 Z" />
	<PathGeometry x:Key="Geo.ExpanderArrow.Expanded" Figures="M18 16 10 16 18 8 Z" />

	<Style x:Key="DStyles.ToggleButton.ExpanderArrow" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<Border Padding="{TemplateBinding Padding}" Background="Transparent">
						<Path
							x:Name="ExpandPath"
							Width="24"
							Height="24"
							Data="{StaticResource Geo.ExpanderArrow.Collapsed}"
							Fill="Transparent"
							Stroke="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Setter TargetName="ExpandPath" Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
							<Setter TargetName="ExpandPath" Property="Data" Value="{StaticResource Geo.ExpanderArrow.Expanded}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DStyles.ToggleButton.ExpanderArrow.Animated" TargetType="{x:Type ToggleButton}">
		<Setter Property="Focusable" Value="False" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type ToggleButton}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="Storyboard.Checked">
							<DMedia:GeometryAnimation
								Storyboard.TargetName="ExpandPath"
								Storyboard.TargetProperty="(Path.Data)"
								From="{StaticResource Geo.ExpanderArrow.Collapsed}"
								To="{StaticResource Geo.ExpanderArrow.Expanded}"
								Duration="0:0:0.2">
								<DMedia:GeometryAnimation.EasingFunction>
									<QuinticEase EasingMode="EaseOut" />
								</DMedia:GeometryAnimation.EasingFunction>
							</DMedia:GeometryAnimation>
						</Storyboard>
						<Storyboard x:Key="Storyboard.Unchecked">
							<DMedia:GeometryAnimation
								Storyboard.TargetName="ExpandPath"
								Storyboard.TargetProperty="(Path.Data)"
								From="{StaticResource Geo.ExpanderArrow.Expanded}"
								To="{StaticResource Geo.ExpanderArrow.Collapsed}"
								Duration="0:0:0.2">
								<DMedia:GeometryAnimation.EasingFunction>
									<QuinticEase EasingMode="EaseOut" />
								</DMedia:GeometryAnimation.EasingFunction>
							</DMedia:GeometryAnimation>
						</Storyboard>
					</ControlTemplate.Resources>
					<Border Padding="{TemplateBinding Padding}" Background="Transparent">
						<Path
							x:Name="ExpandPath"
							Width="24"
							Height="24"
							Data="{StaticResource Geo.ExpanderArrow.Collapsed}"
							Fill="Transparent"
							Stroke="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="IsChecked" Value="True">
							<Trigger.ExitActions>
								<BeginStoryboard x:Name="Storyboard_Unchecked_BeginStoryboard" Storyboard="{StaticResource Storyboard.Unchecked}" />
							</Trigger.ExitActions>
							<Trigger.EnterActions>
								<BeginStoryboard x:Name="Storyboard_Checked_BeginStoryboard" Storyboard="{StaticResource Storyboard.Checked}" />
							</Trigger.EnterActions>
							<Setter TargetName="ExpandPath" Property="Fill" Value="{Binding Foreground, RelativeSource={RelativeSource TemplatedParent}}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style x:Key="DStyles.TreeViewItem.Base" TargetType="{x:Type TreeViewItem}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Foreground" Value="{DynamicResource DBrush.Content.Fill.Neutral.Primary.Normal}" />
		<Setter Property="Padding" Value="5" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" MinWidth="24" />
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<ToggleButton
							x:Name="Expander"
							Padding="5"
							ClickMode="Press"
							Foreground="{DynamicResource DBrush.Content.Fill.Accent.Primary.Normal}"
							IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
							Style="{StaticResource DStyles.ToggleButton.ExpanderArrow}" />
						<Border
							x:Name="Bd"
							Grid.Column="1"
							Grid.ColumnSpan="2"
							Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="true">
							<ContentPresenter
								x:Name="PART_Header"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="Center"
								ContentSource="Header"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<ItemsPresenter
							x:Name="ItemsHost"
							Grid.Row="1"
							Grid.ColumnSpan="2"
							Margin="10,0,0,0" />
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource DBrush.Container.Fill.Neutral.Primary.Actived}" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
								<Condition SourceName="Bd" Property="IsMouseOver" Value="false" />
								<Condition Property="IsSelected" Value="false" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource DBrush.Container.Fill.Neutral.Primary.Hover}" />
						</MultiTrigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
								<Condition SourceName="Bd" Property="IsMouseOver" Value="true" />
								<Condition Property="IsSelected" Value="false" />
							</MultiTrigger.Conditions>
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource DBrush.Container.Fill.Neutral.Primary.Hover}" />
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource DBrush.Content.Fill.Disabled}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="DStyles.TreeViewItem.Base.Animated" TargetType="{x:Type TreeViewItem}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="Foreground" Value="{DynamicResource DBrush.Content.Fill.Neutral.Primary.Normal}" />
		<Setter Property="Padding" Value="5" />
		<Setter Property="ItemContainerStyle" Value="{DynamicResource DStyles.TreeViewItem.Base.Animated}" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeViewItem}">
					<ControlTemplate.Resources>
						<Storyboard x:Key="ExitMouseOver">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.Opacity)">
								<EasingDoubleKeyFrame KeyTime="0:0:0.3" Value="0" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
						<Storyboard x:Key="EnterMouseOver">
							<DoubleAnimationUsingKeyFrames Storyboard.TargetName="Bd" Storyboard.TargetProperty="(UIElement.Opacity)">
								<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1" />
							</DoubleAnimationUsingKeyFrames>
						</Storyboard>
					</ControlTemplate.Resources>
					<Grid>
						<Grid.ColumnDefinitions>
							<ColumnDefinition Width="Auto" MinWidth="24" />
							<!--<ColumnDefinition Width="Auto"/>-->
							<ColumnDefinition Width="*" />
						</Grid.ColumnDefinitions>
						<Grid.RowDefinitions>
							<RowDefinition Height="Auto" />
							<RowDefinition Height="Auto" />
						</Grid.RowDefinitions>
						<ToggleButton
							x:Name="Expander"
							Padding="5"
							ClickMode="Press"
							Foreground="{DynamicResource DBrush.Content.Fill.Accent.Primary.Normal}"
							IsChecked="{Binding IsExpanded, RelativeSource={RelativeSource TemplatedParent}}"
							Style="{StaticResource DStyles.ToggleButton.ExpanderArrow.Animated}" />
						<Border
							x:Name="Bd"
							Grid.Column="1"
							Grid.ColumnSpan="2"
							Background="{DynamicResource DBrush.Container.Fill.Neutral.Primary.Hover}"
							BorderBrush="{TemplateBinding BorderBrush}"
							BorderThickness="{TemplateBinding BorderThickness}"
							Opacity="0"
							SnapsToDevicePixels="true" />
						<Border
							x:Name="headerContentHost"
							Grid.Column="1"
							Grid.ColumnSpan="2"
							Padding="{TemplateBinding Padding}"
							Background="Transparent"
							BorderBrush="Transparent"
							BorderThickness="{TemplateBinding BorderThickness}"
							SnapsToDevicePixels="true">
							<ContentPresenter
								x:Name="PART_Header"
								HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
								VerticalAlignment="Center"
								ContentSource="Header"
								SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
						</Border>
						<DControls:SizeBoxClipper
							x:Name="ScaleHost"
							Grid.Row="1"
							Grid.ColumnSpan="2"
							Margin="10,0,0,0"
							HeightRatio="1"
							IsChildClippingEnabled="True"
							SizeReference="PaddedChildSize">
							<ItemsPresenter x:Name="ItemsHost" />
						</DControls:SizeBoxClipper>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="ExpansionStates">
								<VisualStateGroup.Transitions>
									<VisualTransition GeneratedDuration="0" To="Expanded">
										<VisualTransition.GeneratedEasingFunction>
											<CubicEase EasingMode="EaseOut" />
										</VisualTransition.GeneratedEasingFunction>
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimation
												Storyboard.TargetName="ItemsHost"
												Storyboard.TargetProperty="Opacity"
												To="1"
												Duration="0:0:0.3" />
											<DoubleAnimation
												Storyboard.TargetName="ScaleHost"
												Storyboard.TargetProperty="HeightRatio"
												To="1"
												Duration="0:0:0.3" />
										</Storyboard>
									</VisualTransition>
									<VisualTransition GeneratedDuration="0" To="Collapsed">
										<VisualTransition.GeneratedEasingFunction>
											<CubicEase EasingMode="EaseOut" />
										</VisualTransition.GeneratedEasingFunction>
										<Storyboard>
											<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility">
												<DiscreteObjectKeyFrame KeyTime="0:0:0.3" Value="{x:Static Visibility.Collapsed}" />
											</ObjectAnimationUsingKeyFrames>
											<DoubleAnimation
												Storyboard.TargetName="ItemsHost"
												Storyboard.TargetProperty="Opacity"
												To="0"
												Duration="0:0:0.3" />
											<DoubleAnimation
												Storyboard.TargetName="ScaleHost"
												Storyboard.TargetProperty="HeightRatio"
												To="0"
												Duration="0:0:0.3" />
										</Storyboard>
									</VisualTransition>
								</VisualStateGroup.Transitions>
								<VisualState x:Name="Expanded">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="ItemsHost"
											Storyboard.TargetProperty="Opacity"
											To="1"
											Duration="0" />
										<DoubleAnimation
											Storyboard.TargetName="ScaleHost"
											Storyboard.TargetProperty="HeightRatio"
											To="1"
											Duration="0:0:0.3" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Visible}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Collapsed">
									<Storyboard>
										<DoubleAnimation
											Storyboard.TargetName="ItemsHost"
											Storyboard.TargetProperty="Opacity"
											To="0"
											Duration="0" />
										<DoubleAnimation
											Storyboard.TargetName="ScaleHost"
											Storyboard.TargetProperty="HeightRatio"
											To="0"
											Duration="0:0:0.3" />
										<ObjectAnimationUsingKeyFrames Storyboard.TargetName="ItemsHost" Storyboard.TargetProperty="Visibility">
											<DiscreteObjectKeyFrame KeyTime="0" Value="{x:Static Visibility.Collapsed}" />
										</ObjectAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</Grid>
					<ControlTemplate.Triggers>
						<Trigger Property="IsExpanded" Value="false">
							<Setter TargetName="ItemsHost" Property="Visibility" Value="Collapsed" />
						</Trigger>
						<Trigger Property="HasItems" Value="false">
							<Setter TargetName="Expander" Property="Visibility" Value="Hidden" />
						</Trigger>
						<Trigger Property="IsSelected" Value="true">
							<Setter TargetName="headerContentHost" Property="Background" Value="{DynamicResource DBrush.Container.Fill.Neutral.Primary.Actived}" />
							<Setter TargetName="Bd" Property="Opacity" Value="1" />
						</Trigger>
						<MultiTrigger>
							<MultiTrigger.Conditions>
								<Condition Property="IsMouseOver" Value="true" />
								<Condition Property="IsSelected" Value="False" />
							</MultiTrigger.Conditions>
							<MultiTrigger.EnterActions>
								<BeginStoryboard x:Name="EnterMouseOver_BeginStoryboard" Storyboard="{StaticResource EnterMouseOver}" />
							</MultiTrigger.EnterActions>
							<MultiTrigger.ExitActions>
								<BeginStoryboard x:Name="ExitMouseOver_BeginStoryboard" Storyboard="{StaticResource ExitMouseOver}" />
							</MultiTrigger.ExitActions>
						</MultiTrigger>
						<Trigger Property="IsEnabled" Value="false">
							<Setter Property="Foreground" Value="{DynamicResource DBrush.Content.Fill.Disabled}" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="DStyles.TreeView.Base" TargetType="{x:Type TreeView}">
		<Setter Property="Background" Value="Transparent" />
		<Setter Property="BorderBrush" Value="Transparent" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Foreground" Value="{DynamicResource DBrush.Content.Fill.Neutral.Primary.Normal}" />
		<Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type TreeView}">
					<DControls:ClippedContentControl
						x:Name="Bd"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="{Binding Path=(Core:Attachable.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
						IsBorderClipperEnabled="True"
						SnapsToDevicePixels="true">
						<ScrollViewer
							x:Name="_tv_scrollviewer_"
							Padding="{TemplateBinding Padding}"
							Background="{TemplateBinding Background}"
							CanContentScroll="false"
							Focusable="false"
							HorizontalScrollBarVisibility="{TemplateBinding ScrollViewer.HorizontalScrollBarVisibility}"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
							VerticalScrollBarVisibility="{TemplateBinding ScrollViewer.VerticalScrollBarVisibility}">
							<ItemsPresenter />
						</ScrollViewer>
					</DControls:ClippedContentControl>
					<ControlTemplate.Triggers>
						<Trigger Property="IsEnabled" Value="false">
							<Setter TargetName="Bd" Property="Background" Value="{DynamicResource DBrush.Content.Fill.Disabled}" />
						</Trigger>
						<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
							<Setter TargetName="_tv_scrollviewer_" Property="CanContentScroll" Value="true" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
		<Style.Triggers>
			<Trigger Property="VirtualizingPanel.IsVirtualizing" Value="true">
				<Setter Property="ItemsPanel">
					<Setter.Value>
						<ItemsPanelTemplate>
							<VirtualizingStackPanel />
						</ItemsPanelTemplate>
					</Setter.Value>
				</Setter>
			</Trigger>
		</Style.Triggers>
	</Style>


</ResourceDictionary>