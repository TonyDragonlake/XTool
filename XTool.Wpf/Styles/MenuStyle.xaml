<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:Core="clr-namespace:FantaziaDesign.Wpf.Core"
	xmlns:DControls="clr-namespace:FantaziaDesign.Wpf.Controls">

	<ControlTemplate x:Key="DTemplate.MenuItem.TopLevelItem" TargetType="{x:Type MenuItem}">
		<Border
			x:Name="templateRoot"
			Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding BorderBrush}"
			BorderThickness="{TemplateBinding BorderThickness}"
			CornerRadius="{Binding Path=(Core:Attachable.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
			SnapsToDevicePixels="true">
			<Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="*" />
				</Grid.ColumnDefinitions>
				<ContentPresenter
					x:Name="iconPresenter"
					Width="16"
					Height="16"
					Margin="8,4"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					ContentSource="Icon"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<ContentPresenter
					Grid.Column="1"
					Margin="{TemplateBinding Padding}"
					ContentSource="Header"
					RecognizesAccessKey="True"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="iconPresenter" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource DBrush.Container.Fill.Neutral.Primary.Hover}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource DBrush.Content.Fill.Disabled}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="DTemplate.MenuItem.TopLevelHeader" TargetType="{x:Type MenuItem}">
		<Border
			x:Name="templateRoot"
			Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding BorderBrush}"
			BorderThickness="{TemplateBinding BorderThickness}"
			CornerRadius="{Binding Path=(Core:Attachable.CornerRadius), RelativeSource={RelativeSource TemplatedParent}}"
			SnapsToDevicePixels="true">
			<Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" />
					<ColumnDefinition Width="Auto" />
				</Grid.ColumnDefinitions>
				<ContentPresenter
					x:Name="Icon"
					Width="16"
					Height="16"
					Margin="4"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					ContentSource="Icon"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<ContentPresenter
					Grid.Column="1"
					Margin="{TemplateBinding Padding}"
					ContentSource="Header"
					RecognizesAccessKey="True"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<Popup
					x:Name="PART_Popup"
					AllowsTransparency="true"
					Focusable="false"
					IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
					Placement="Bottom"
					PlacementTarget="{Binding ElementName=templateRoot}"
					PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
					VerticalOffset="-2">
					<DControls:BorderClipper
						x:Name="SubMenuBorder"
						Margin="8,4,8,12"
						Background="{DynamicResource DBrush.Surface.Fill.Highlight}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="8"
						IsChildClippingEnabled="True">
						<UIElement.Effect>
							<DropShadowEffect
								BlurRadius="14"
								Direction="270"
								Opacity="0.42"
								ShadowDepth="4.5"
								Color="Gray" />
						</UIElement.Effect>
						<ScrollViewer
							x:Name="SubMenuScrollViewer"
							Margin="0"
							Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
							                                              TypeInTargetAssembly={x:Type FrameworkElement}}}">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas
									Width="0"
									Height="0"
									HorizontalAlignment="Left"
									VerticalAlignment="Top">
									<Rectangle
										x:Name="OpaqueRect"
										Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
										Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
										Fill="{Binding Background, ElementName=SubMenuBorder}" />
								</Canvas>
								<ItemsPresenter
									x:Name="ItemsPresenter"
									Grid.IsSharedSizeScope="true"
									KeyboardNavigation.DirectionalNavigation="Cycle"
									KeyboardNavigation.TabNavigation="Cycle"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</ScrollViewer>
					</DControls:BorderClipper>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="true">
				<Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="Icon" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource DBrush.Container.Fill.Neutral.Primary.Hover}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource DBrush.Content.Fill.Disabled}" />
			</Trigger>
			<Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
				<Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
				<Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="DTemplate.MenuItem.SubmenuItem" TargetType="{x:Type MenuItem}">
		<Border
			x:Name="templateRoot"
			MinHeight="36"
			Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding BorderBrush}"
			BorderThickness="{TemplateBinding BorderThickness}"
			SnapsToDevicePixels="true">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
				</Grid.ColumnDefinitions>
				<ContentPresenter
					x:Name="iconPresenter"
					Width="16"
					Height="16"
					Margin="8,4"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					ContentSource="Icon"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<ContentPresenter
					x:Name="menuHeaderContainer"
					Grid.Column="1"
					Margin="{TemplateBinding Padding}"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					ContentSource="Header"
					RecognizesAccessKey="True"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<TextBlock
					x:Name="menuGestureText"
					Grid.Column="2"
					Margin="{TemplateBinding Padding}"
					VerticalAlignment="Center"
					Opacity="0.7"
					Text="{TemplateBinding InputGestureText}" />
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="iconPresenter" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource DBrush.Container.Fill.Neutral.Primary.Hover}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource DBrush.Content.Fill.Disabled}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<ControlTemplate x:Key="DTemplate.MenuItem.SubmenuHeader" TargetType="{x:Type MenuItem}">
		<Border
			x:Name="templateRoot"
			MinHeight="36"
			Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding BorderBrush}"
			BorderThickness="{TemplateBinding BorderThickness}"
			SnapsToDevicePixels="true">
			<Grid>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIconColumnGroup" />
					<ColumnDefinition Width="*" />
					<ColumnDefinition Width="Auto" SharedSizeGroup="MenuItemIGTColumnGroup" />
				</Grid.ColumnDefinitions>
				<ContentPresenter
					x:Name="iconPresenter"
					Width="16"
					Height="16"
					Margin="4"
					HorizontalAlignment="Center"
					VerticalAlignment="Center"
					ContentSource="Icon"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<ContentPresenter
					Grid.Column="1"
					Margin="{TemplateBinding Padding}"
					HorizontalAlignment="Left"
					VerticalAlignment="Center"
					ContentSource="Header"
					RecognizesAccessKey="True"
					SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				<TextBlock
					Grid.Column="2"
					Margin="{TemplateBinding Padding}"
					VerticalAlignment="Center"
					Opacity="0.7"
					Text="{TemplateBinding InputGestureText}" />
				<Path
					x:Name="RightArrow"
					Grid.Column="3"
					Margin="8,0"
					HorizontalAlignment="Right"
					VerticalAlignment="Center"
					Data="M0.64 11.77 L0 11 5.82 6.15 5.82 5.62 0 0.77 0.64 0 6.82 5.15 6.82 6.62 0.64 11.77 z"
					Fill="{TemplateBinding Foreground}" />
				<Popup
					x:Name="PART_Popup"
					AllowsTransparency="true"
					Focusable="false"
					HorizontalOffset="-2"
					IsOpen="{Binding IsSubmenuOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}"
					Placement="Right"
					PopupAnimation="{DynamicResource {x:Static SystemParameters.MenuPopupAnimationKey}}"
					VerticalOffset="-2">
					<DControls:BorderClipper
						x:Name="SubMenuBorder"
						Margin="8,4,8,12"
						Background="{DynamicResource DBrush.Surface.Fill.Highlight}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						CornerRadius="8"
						IsChildClippingEnabled="True">
						<UIElement.Effect>
							<DropShadowEffect
								BlurRadius="14"
								Direction="270"
								Opacity="0.42"
								ShadowDepth="4.5"
								Color="Gray" />
						</UIElement.Effect>
						<ScrollViewer
							x:Name="SubMenuScrollViewer"
							Margin="0"
							Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
							                                              TypeInTargetAssembly={x:Type FrameworkElement}}}">
							<Grid RenderOptions.ClearTypeHint="Enabled">
								<Canvas
									Width="0"
									Height="0"
									HorizontalAlignment="Left"
									VerticalAlignment="Top">
									<Rectangle
										x:Name="OpaqueRect"
										Width="{Binding ActualWidth, ElementName=SubMenuBorder}"
										Height="{Binding ActualHeight, ElementName=SubMenuBorder}"
										Fill="{Binding Background, ElementName=SubMenuBorder}" />
								</Canvas>
								<ItemsPresenter
									x:Name="ItemsPresenter"
									Grid.IsSharedSizeScope="true"
									KeyboardNavigation.DirectionalNavigation="Cycle"
									KeyboardNavigation.TabNavigation="Cycle"
									SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
							</Grid>
						</ScrollViewer>
					</DControls:BorderClipper>
				</Popup>
			</Grid>
		</Border>
		<ControlTemplate.Triggers>
			<Trigger Property="IsSuspendingPopupAnimation" Value="true">
				<Setter TargetName="PART_Popup" Property="PopupAnimation" Value="None" />
			</Trigger>
			<Trigger Property="Icon" Value="{x:Null}">
				<Setter TargetName="iconPresenter" Property="Visibility" Value="Collapsed" />
			</Trigger>
			<Trigger Property="IsHighlighted" Value="true">
				<Setter TargetName="templateRoot" Property="Background" Value="{DynamicResource DBrush.Container.Fill.Neutral.Primary.Hover}" />
			</Trigger>
			<Trigger Property="IsEnabled" Value="False">
				<Setter TargetName="templateRoot" Property="TextElement.Foreground" Value="{DynamicResource DBrush.Content.Fill.Disabled}" />
				<Setter TargetName="RightArrow" Property="Fill" Value="{DynamicResource DBrush.Content.Fill.Disabled}" />
			</Trigger>
			<Trigger SourceName="SubMenuScrollViewer" Property="ScrollViewer.CanContentScroll" Value="false">
				<Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=SubMenuScrollViewer}" />
				<Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=SubMenuScrollViewer}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="DStyle.MenuItem.Base" TargetType="{x:Type MenuItem}">
		<Setter Property="HorizontalContentAlignment" Value="{Binding HorizontalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
		<Setter Property="ScrollViewer.PanningMode" Value="Both" />
		<Setter Property="Stylus.IsFlicksEnabled" Value="False" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="Background" Value="{DynamicResource DBrush.Container.Fill.Neutral.Primary.Normal}" />
		<Setter Property="BorderBrush" Value="{DynamicResource DBrush.Container.Stroke.Neutral.Primary.Normal}" />
		<Setter Property="Foreground" Value="{DynamicResource DBrush.Content.Fill.Neutral.Primary.Normal}" />
		<Setter Property="Width" Value="Auto" />
		<Setter Property="Margin" Value="0" />
		<Setter Property="Padding" Value="8,0" />
		<Setter Property="Template" Value="{StaticResource DTemplate.MenuItem.SubmenuItem}" />
		<Style.Triggers>
			<Trigger Property="Role" Value="TopLevelHeader">
				<Setter Property="Template" Value="{StaticResource DTemplate.MenuItem.TopLevelHeader}" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="Padding" Value="0" />
			</Trigger>
			<Trigger Property="Role" Value="TopLevelItem">
				<Setter Property="Template" Value="{StaticResource DTemplate.MenuItem.TopLevelItem}" />
				<Setter Property="Background" Value="Transparent" />
				<Setter Property="Padding" Value="0" />
			</Trigger>
			<Trigger Property="Role" Value="SubmenuHeader">
				<Setter Property="Template" Value="{StaticResource DTemplate.MenuItem.SubmenuHeader}" />
				<Setter Property="Padding" Value="8,0" />
				<Setter Property="BorderThickness" Value="0" />
			</Trigger>
		</Style.Triggers>
	</Style>

	<Style x:Key="DStyle.Menu.Base" TargetType="{x:Type Menu}">
		<Setter Property="Background" Value="{DynamicResource DBrush.Container.Fill.Neutral.Primary.Normal}" />
		<Setter Property="BorderBrush" Value="{DynamicResource DBrush.Container.Stroke.Neutral.Primary.Normal}" />
		<Setter Property="Foreground" Value="{DynamicResource DBrush.Content.Fill.Neutral.Primary.Normal}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="VerticalContentAlignment" Value="Center" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type Menu}">
					<Border
						Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="true">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<ControlTemplate x:Key="DTemplate.ContextMenu.Base" TargetType="{x:Type ContextMenu}">
		<DControls:ClippedContentControl
			x:Name="ContextMenuBorder"
			Margin="8,4,8,12"
			HorizontalContentAlignment="Stretch"
			VerticalContentAlignment="Stretch"
			Background="{TemplateBinding Background}"
			BorderBrush="{TemplateBinding BorderBrush}"
			BorderThickness="{TemplateBinding BorderThickness}"
			CornerRadius="5"
			IsBorderClipperEnabled="True">
			<UIElement.Effect>
				<DropShadowEffect
					BlurRadius="14"
					Direction="270"
					Opacity="0.42"
					ShadowDepth="4.5"
					Color="Gray" />
			</UIElement.Effect>
			<ScrollViewer
				x:Name="ContextMenuScrollViewer"
				Grid.ColumnSpan="2"
				Margin="0"
				Style="{DynamicResource {ComponentResourceKey ResourceId=MenuScrollViewer,
				                                              TypeInTargetAssembly={x:Type FrameworkElement}}}">
				<Grid RenderOptions.ClearTypeHint="Enabled">
					<Canvas
						Width="0"
						Height="0"
						HorizontalAlignment="Left"
						VerticalAlignment="Top">
						<Rectangle
							x:Name="OpaqueRect"
							Width="{Binding ActualWidth, ElementName=ContextMenuBorder}"
							Height="{Binding ActualHeight, ElementName=ContextMenuBorder}"
							Fill="{Binding Background, ElementName=ContextMenuBorder}" />
					</Canvas>
					<ItemsPresenter
						x:Name="ItemsPresenter"
						Margin="{TemplateBinding Padding}"
						KeyboardNavigation.DirectionalNavigation="Cycle"
						SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
				</Grid>
			</ScrollViewer>
		</DControls:ClippedContentControl>
		<ControlTemplate.Triggers>
			<Trigger SourceName="ContextMenuScrollViewer" Property="CanContentScroll" Value="False">
				<Setter TargetName="OpaqueRect" Property="Canvas.Top" Value="{Binding VerticalOffset, ElementName=ContextMenuScrollViewer}" />
				<Setter TargetName="OpaqueRect" Property="Canvas.Left" Value="{Binding HorizontalOffset, ElementName=ContextMenuScrollViewer}" />
			</Trigger>
		</ControlTemplate.Triggers>
	</ControlTemplate>

	<Style x:Key="DStyle.ContextMenu.Base" TargetType="{x:Type ContextMenu}">
		<Setter Property="SnapsToDevicePixels" Value="True" />
		<Setter Property="RenderOptions.ClearTypeHint" Value="Enabled" />
		<Setter Property="TextOptions.TextFormattingMode" Value="Ideal" />
		<Setter Property="Background" Value="{DynamicResource DBrush.Container.Fill.Neutral.Primary.Normal}" />
		<Setter Property="BorderBrush" Value="{DynamicResource DBrush.Container.Stroke.Neutral.Primary.Normal}" />
		<Setter Property="Foreground" Value="{DynamicResource DBrush.Content.Fill.Neutral.Primary.Normal}" />
		<Setter Property="BorderThickness" Value="0" />
		<Setter Property="HorizontalOffset" Value="-8" />
		<Setter Property="VerticalOffset" Value="-4" />
		<Setter Property="OverridesDefaultStyle" Value="True" />
		<Setter Property="Grid.IsSharedSizeScope" Value="True" />
		<Setter Property="ItemContainerStyle" Value="{StaticResource DStyle.MenuItem.Base}" />
		<Setter Property="HasDropShadow" Value="True" />
		<Setter Property="Template" Value="{StaticResource DTemplate.ContextMenu.Base}" />
	</Style>
</ResourceDictionary>