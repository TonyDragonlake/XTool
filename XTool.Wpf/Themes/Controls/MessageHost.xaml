<ResourceDictionary
	xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
	xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
	xmlns:DControls="clr-namespace:FantaziaDesign.Wpf.Controls">

	<Style TargetType="{x:Type DControls:MessageContainer}">
		<Setter Property="Background" Value="{DynamicResource DBrush.Surface.Fill.Mask}" />
		<Setter Property="HorizontalContentAlignment" Value="Stretch" />
		<Setter Property="VerticalContentAlignment" Value="Stretch" />
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DControls:MessageContainer}">
					<DControls:LayersPanel
						x:Name="majorRoot"
						Background="{TemplateBinding Background}"
						BackgroundOpacity="{TemplateBinding MaskOpacity}"
						SnapsToDevicePixels="true">
						<ContentPresenter
							x:Name="contentPresenter"
							HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
							VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
							RenderTransformOrigin="0.5,0.5"
							SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
							<ContentPresenter.RenderTransform>
								<TransformGroup>
									<ScaleTransform />
									<SkewTransform />
									<RotateTransform />
									<TranslateTransform />
								</TransformGroup>
							</ContentPresenter.RenderTransform>
						</ContentPresenter>
						<VisualStateManager.VisualStateGroups>
							<VisualStateGroup x:Name="LayoutStates">
								<VisualState x:Name="Loaded">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="majorRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="0" Value="0">
												<EasingDoubleKeyFrame.EasingFunction>
													<CubicEase EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
												<EasingDoubleKeyFrame.EasingFunction>
													<CubicEase EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
											<EasingDoubleKeyFrame KeyTime="0" Value="1.2">
												<EasingDoubleKeyFrame.EasingFunction>
													<CubicEase EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
												<EasingDoubleKeyFrame.EasingFunction>
													<CubicEase EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
											<EasingDoubleKeyFrame KeyTime="0" Value="1.2">
												<EasingDoubleKeyFrame.EasingFunction>
													<CubicEase EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1">
												<EasingDoubleKeyFrame.EasingFunction>
													<CubicEase EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
								<VisualState x:Name="Unloaded">
									<Storyboard>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="majorRoot" Storyboard.TargetProperty="(UIElement.Opacity)">
											<EasingDoubleKeyFrame KeyTime="0" Value="1">
												<EasingDoubleKeyFrame.EasingFunction>
													<CubicEase EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0">
												<EasingDoubleKeyFrame.EasingFunction>
													<CubicEase EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
											<EasingDoubleKeyFrame KeyTime="0" Value="1">
												<EasingDoubleKeyFrame.EasingFunction>
													<CubicEase EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.2">
												<EasingDoubleKeyFrame.EasingFunction>
													<CubicEase EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
										<DoubleAnimationUsingKeyFrames Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleY)">
											<EasingDoubleKeyFrame KeyTime="0" Value="1">
												<EasingDoubleKeyFrame.EasingFunction>
													<CubicEase EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
											<EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="1.2">
												<EasingDoubleKeyFrame.EasingFunction>
													<CubicEase EasingMode="EaseInOut" />
												</EasingDoubleKeyFrame.EasingFunction>
											</EasingDoubleKeyFrame>
										</DoubleAnimationUsingKeyFrames>
									</Storyboard>
								</VisualState>
							</VisualStateGroup>
						</VisualStateManager.VisualStateGroups>
					</DControls:LayersPanel>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>

	<Style TargetType="{x:Type DControls:MessageHost}">
		<Setter Property="Template">
			<Setter.Value>
				<ControlTemplate TargetType="{x:Type DControls:MessageHost}">
					<Border
						Padding="{TemplateBinding Padding}"
						Background="{TemplateBinding Background}"
						BorderBrush="{TemplateBinding BorderBrush}"
						BorderThickness="{TemplateBinding BorderThickness}"
						SnapsToDevicePixels="true">
						<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
					</Border>
					<ControlTemplate.Triggers>
						<Trigger Property="HasItems" Value="False">
							<Setter Property="Visibility" Value="Collapsed" />
						</Trigger>
					</ControlTemplate.Triggers>
				</ControlTemplate>
			</Setter.Value>
		</Setter>
	</Style>
</ResourceDictionary>